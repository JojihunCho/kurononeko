Terminals unused in grammar

    ERROR


Grammar

    0 $accept: program $end

    1 program: D_L

    2 D_L: D_L D
    3    | D

    4 D: V_D
    5  | F_D

    6 V_D: T IDS SEMI
    7    | T IDS LBRACE NUMS RBRACE SEMI

    8 IDS: ID

    9 NUMS: NUM

   10 T: INT
   11  | VOID

   12 $@1: %empty

   13 F_D: T IDS $@1 LPAREN PS RPAREN C_SM

   14 PS: P_L

   15 P_L: P_L COMMA P
   16    | P
   17    | VOID

   18 P: T IDS
   19  | T IDS LBRACE RBRACE

   20 C_SM: LCURLY L_D S_L RCURLY

   21 L_D: L_D V_D
   22    | %empty

   23 S_L: S_L SM
   24    | %empty

   25 SM: E_SM
   26   | C_SM
   27   | S_SM
   28   | I_SM
   29   | RE_SM

   30 E_SM: E SEMI
   31     | SEMI

   32 S_SM: IF LPAREN E RPAREN SM
   33     | IF LPAREN E RPAREN SM ELSE SM

   34 I_SM: WHILE LPAREN E RPAREN SM

   35 RE_SM: RETURN SEMI
   36      | RETURN E SEMI

   37 E: V ASSIGN E
   38  | S_E

   39 V: IDS
   40  | IDS LBRACE E RBRACE

   41 S_E: A_SM ROP A_SM
   42    | A_SM

   43 ROP: EQ
   44    | NE
   45    | GE
   46    | GT
   47    | LE
   48    | LT

   49 A_SM: A_SM AOP TERM
   50     | TERM

   51 AOP: PLUS
   52    | MINUS

   53 TERM: TERM MOP FAC
   54     | FAC

   55 MOP: TIMES
   56    | OVER

   57 FAC: LPAREN E RPAREN
   58    | V
   59    | CAL
   60    | NUM

   61 CAL: IDS LPAREN ARG RPAREN

   62 ARG: ARG_L
   63    | %empty

   64 ARG_L: ARG_L COMMA E
   65      | E


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 32 33
    ELSE (259) 33
    WHILE (260) 34
    RETURN (261) 35 36
    INT (262) 10
    VOID (263) 11 17
    ID (264) 8
    NUM (265) 9 60
    ASSIGN (266) 37
    EQ (267) 43
    NE (268) 44
    LT (269) 48
    LE (270) 47
    GT (271) 46
    GE (272) 45
    PLUS (273) 51
    MINUS (274) 52
    TIMES (275) 55
    OVER (276) 56
    LPAREN (277) 13 32 33 34 57 61
    RPAREN (278) 13 32 33 34 57 61
    LCURLY (279) 20
    RCURLY (280) 20
    LBRACE (281) 7 19 40
    RBRACE (282) 7 19 40
    SEMI (283) 6 7 30 31 35 36
    COMMA (284) 15 64
    ERROR (285)
    NOELSE (286)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program (33)
        on left: 1
        on right: 0
    D_L (34)
        on left: 2 3
        on right: 1 2
    D (35)
        on left: 4 5
        on right: 2 3
    V_D (36)
        on left: 6 7
        on right: 4 21
    IDS (37)
        on left: 8
        on right: 6 7 13 18 19 39 40 61
    NUMS (38)
        on left: 9
        on right: 7
    T (39)
        on left: 10 11
        on right: 6 7 13 18 19
    F_D (40)
        on left: 13
        on right: 5
    $@1 (41)
        on left: 12
        on right: 13
    PS (42)
        on left: 14
        on right: 13
    P_L (43)
        on left: 15 16 17
        on right: 14 15
    P (44)
        on left: 18 19
        on right: 15 16
    C_SM (45)
        on left: 20
        on right: 13 26
    L_D (46)
        on left: 21 22
        on right: 20 21
    S_L (47)
        on left: 23 24
        on right: 20 23
    SM (48)
        on left: 25 26 27 28 29
        on right: 23 32 33 34
    E_SM (49)
        on left: 30 31
        on right: 25
    S_SM (50)
        on left: 32 33
        on right: 27
    I_SM (51)
        on left: 34
        on right: 28
    RE_SM (52)
        on left: 35 36
        on right: 29
    E (53)
        on left: 37 38
        on right: 30 32 33 34 36 37 40 57 64 65
    V (54)
        on left: 39 40
        on right: 37 58
    S_E (55)
        on left: 41 42
        on right: 38
    ROP (56)
        on left: 43 44 45 46 47 48
        on right: 41
    A_SM (57)
        on left: 49 50
        on right: 41 42 49
    AOP (58)
        on left: 51 52
        on right: 49
    TERM (59)
        on left: 53 54
        on right: 49 50 53
    MOP (60)
        on left: 55 56
        on right: 53
    FAC (61)
        on left: 57 58 59 60
        on right: 53 54
    CAL (62)
        on left: 61
        on right: 59
    ARG (63)
        on left: 62 63
        on right: 61
    ARG_L (64)
        on left: 64 65
        on right: 62 64


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program  go to state 3
    D_L      go to state 4
    D        go to state 5
    V_D      go to state 6
    T        go to state 7
    F_D      go to state 8


State 1

   10 T: INT .

    $default  reduce using rule 10 (T)


State 2

   11 T: VOID .

    $default  reduce using rule 11 (T)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: D_L .
    2 D_L: D_L . D

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    D    go to state 10
    V_D  go to state 6
    T    go to state 7
    F_D  go to state 8


State 5

    3 D_L: D .

    $default  reduce using rule 3 (D_L)


State 6

    4 D: V_D .

    $default  reduce using rule 4 (D)


State 7

    6 V_D: T . IDS SEMI
    7    | T . IDS LBRACE NUMS RBRACE SEMI
   13 F_D: T . IDS $@1 LPAREN PS RPAREN C_SM

    ID  shift, and go to state 11

    IDS  go to state 12


State 8

    5 D: F_D .

    $default  reduce using rule 5 (D)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 D_L: D_L D .

    $default  reduce using rule 2 (D_L)


State 11

    8 IDS: ID .

    $default  reduce using rule 8 (IDS)


State 12

    6 V_D: T IDS . SEMI
    7    | T IDS . LBRACE NUMS RBRACE SEMI
   13 F_D: T IDS . $@1 LPAREN PS RPAREN C_SM

    LBRACE  shift, and go to state 13
    SEMI    shift, and go to state 14

    $default  reduce using rule 12 ($@1)

    $@1  go to state 15


State 13

    7 V_D: T IDS LBRACE . NUMS RBRACE SEMI

    NUM  shift, and go to state 16

    NUMS  go to state 17


State 14

    6 V_D: T IDS SEMI .

    $default  reduce using rule 6 (V_D)


State 15

   13 F_D: T IDS $@1 . LPAREN PS RPAREN C_SM

    LPAREN  shift, and go to state 18


State 16

    9 NUMS: NUM .

    $default  reduce using rule 9 (NUMS)


State 17

    7 V_D: T IDS LBRACE NUMS . RBRACE SEMI

    RBRACE  shift, and go to state 19


State 18

   13 F_D: T IDS $@1 LPAREN . PS RPAREN C_SM

    INT   shift, and go to state 1
    VOID  shift, and go to state 20

    T    go to state 21
    PS   go to state 22
    P_L  go to state 23
    P    go to state 24


State 19

    7 V_D: T IDS LBRACE NUMS RBRACE . SEMI

    SEMI  shift, and go to state 25


State 20

   11 T: VOID .
   17 P_L: VOID .

    ID        reduce using rule 11 (T)
    $default  reduce using rule 17 (P_L)


State 21

   18 P: T . IDS
   19  | T . IDS LBRACE RBRACE

    ID  shift, and go to state 11

    IDS  go to state 26


State 22

   13 F_D: T IDS $@1 LPAREN PS . RPAREN C_SM

    RPAREN  shift, and go to state 27


State 23

   14 PS: P_L .
   15 P_L: P_L . COMMA P

    COMMA  shift, and go to state 28

    $default  reduce using rule 14 (PS)


State 24

   16 P_L: P .

    $default  reduce using rule 16 (P_L)


State 25

    7 V_D: T IDS LBRACE NUMS RBRACE SEMI .

    $default  reduce using rule 7 (V_D)


State 26

   18 P: T IDS .
   19  | T IDS . LBRACE RBRACE

    LBRACE  shift, and go to state 29

    $default  reduce using rule 18 (P)


State 27

   13 F_D: T IDS $@1 LPAREN PS RPAREN . C_SM

    LCURLY  shift, and go to state 30

    C_SM  go to state 31


State 28

   15 P_L: P_L COMMA . P

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    T  go to state 21
    P  go to state 32


State 29

   19 P: T IDS LBRACE . RBRACE

    RBRACE  shift, and go to state 33


State 30

   20 C_SM: LCURLY . L_D S_L RCURLY

    $default  reduce using rule 22 (L_D)

    L_D  go to state 34


State 31

   13 F_D: T IDS $@1 LPAREN PS RPAREN C_SM .

    $default  reduce using rule 13 (F_D)


State 32

   15 P_L: P_L COMMA P .

    $default  reduce using rule 15 (P_L)


State 33

   19 P: T IDS LBRACE RBRACE .

    $default  reduce using rule 19 (P)


State 34

   20 C_SM: LCURLY L_D . S_L RCURLY
   21 L_D: L_D . V_D

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 24 (S_L)

    V_D  go to state 35
    T    go to state 36
    S_L  go to state 37


State 35

   21 L_D: L_D V_D .

    $default  reduce using rule 21 (L_D)


State 36

    6 V_D: T . IDS SEMI
    7    | T . IDS LBRACE NUMS RBRACE SEMI

    ID  shift, and go to state 11

    IDS  go to state 38


State 37

   20 C_SM: LCURLY L_D S_L . RCURLY
   23 S_L: S_L . SM

    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 30
    RCURLY  shift, and go to state 44
    SEMI    shift, and go to state 45

    IDS    go to state 46
    C_SM   go to state 47
    SM     go to state 48
    E_SM   go to state 49
    S_SM   go to state 50
    I_SM   go to state 51
    RE_SM  go to state 52
    E      go to state 53
    V      go to state 54
    S_E    go to state 55
    A_SM   go to state 56
    TERM   go to state 57
    FAC    go to state 58
    CAL    go to state 59


State 38

    6 V_D: T IDS . SEMI
    7    | T IDS . LBRACE NUMS RBRACE SEMI

    LBRACE  shift, and go to state 13
    SEMI    shift, and go to state 14


State 39

   32 S_SM: IF . LPAREN E RPAREN SM
   33     | IF . LPAREN E RPAREN SM ELSE SM

    LPAREN  shift, and go to state 60


State 40

   34 I_SM: WHILE . LPAREN E RPAREN SM

    LPAREN  shift, and go to state 61


State 41

   35 RE_SM: RETURN . SEMI
   36      | RETURN . E SEMI

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43
    SEMI    shift, and go to state 62

    IDS   go to state 46
    E     go to state 63
    V     go to state 54
    S_E   go to state 55
    A_SM  go to state 56
    TERM  go to state 57
    FAC   go to state 58
    CAL   go to state 59


State 42

   60 FAC: NUM .

    $default  reduce using rule 60 (FAC)


State 43

   57 FAC: LPAREN . E RPAREN

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    IDS   go to state 46
    E     go to state 64
    V     go to state 54
    S_E   go to state 55
    A_SM  go to state 56
    TERM  go to state 57
    FAC   go to state 58
    CAL   go to state 59


State 44

   20 C_SM: LCURLY L_D S_L RCURLY .

    $default  reduce using rule 20 (C_SM)


State 45

   31 E_SM: SEMI .

    $default  reduce using rule 31 (E_SM)


State 46

   39 V: IDS .
   40  | IDS . LBRACE E RBRACE
   61 CAL: IDS . LPAREN ARG RPAREN

    LPAREN  shift, and go to state 65
    LBRACE  shift, and go to state 66

    $default  reduce using rule 39 (V)


State 47

   26 SM: C_SM .

    $default  reduce using rule 26 (SM)


State 48

   23 S_L: S_L SM .

    $default  reduce using rule 23 (S_L)


State 49

   25 SM: E_SM .

    $default  reduce using rule 25 (SM)


State 50

   27 SM: S_SM .

    $default  reduce using rule 27 (SM)


State 51

   28 SM: I_SM .

    $default  reduce using rule 28 (SM)


State 52

   29 SM: RE_SM .

    $default  reduce using rule 29 (SM)


State 53

   30 E_SM: E . SEMI

    SEMI  shift, and go to state 67


State 54

   37 E: V . ASSIGN E
   58 FAC: V .

    ASSIGN  shift, and go to state 68

    $default  reduce using rule 58 (FAC)


State 55

   38 E: S_E .

    $default  reduce using rule 38 (E)


State 56

   41 S_E: A_SM . ROP A_SM
   42    | A_SM .
   49 A_SM: A_SM . AOP TERM

    EQ     shift, and go to state 69
    NE     shift, and go to state 70
    LT     shift, and go to state 71
    LE     shift, and go to state 72
    GT     shift, and go to state 73
    GE     shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 42 (S_E)

    ROP  go to state 77
    AOP  go to state 78


State 57

   50 A_SM: TERM .
   53 TERM: TERM . MOP FAC

    TIMES  shift, and go to state 79
    OVER   shift, and go to state 80

    $default  reduce using rule 50 (A_SM)

    MOP  go to state 81


State 58

   54 TERM: FAC .

    $default  reduce using rule 54 (TERM)


State 59

   59 FAC: CAL .

    $default  reduce using rule 59 (FAC)


State 60

   32 S_SM: IF LPAREN . E RPAREN SM
   33     | IF LPAREN . E RPAREN SM ELSE SM

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    IDS   go to state 46
    E     go to state 82
    V     go to state 54
    S_E   go to state 55
    A_SM  go to state 56
    TERM  go to state 57
    FAC   go to state 58
    CAL   go to state 59


State 61

   34 I_SM: WHILE LPAREN . E RPAREN SM

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    IDS   go to state 46
    E     go to state 83
    V     go to state 54
    S_E   go to state 55
    A_SM  go to state 56
    TERM  go to state 57
    FAC   go to state 58
    CAL   go to state 59


State 62

   35 RE_SM: RETURN SEMI .

    $default  reduce using rule 35 (RE_SM)


State 63

   36 RE_SM: RETURN E . SEMI

    SEMI  shift, and go to state 84


State 64

   57 FAC: LPAREN E . RPAREN

    RPAREN  shift, and go to state 85


State 65

   61 CAL: IDS LPAREN . ARG RPAREN

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    $default  reduce using rule 63 (ARG)

    IDS    go to state 46
    E      go to state 86
    V      go to state 54
    S_E    go to state 55
    A_SM   go to state 56
    TERM   go to state 57
    FAC    go to state 58
    CAL    go to state 59
    ARG    go to state 87
    ARG_L  go to state 88


State 66

   40 V: IDS LBRACE . E RBRACE

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    IDS   go to state 46
    E     go to state 89
    V     go to state 54
    S_E   go to state 55
    A_SM  go to state 56
    TERM  go to state 57
    FAC   go to state 58
    CAL   go to state 59


State 67

   30 E_SM: E SEMI .

    $default  reduce using rule 30 (E_SM)


State 68

   37 E: V ASSIGN . E

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    IDS   go to state 46
    E     go to state 90
    V     go to state 54
    S_E   go to state 55
    A_SM  go to state 56
    TERM  go to state 57
    FAC   go to state 58
    CAL   go to state 59


State 69

   43 ROP: EQ .

    $default  reduce using rule 43 (ROP)


State 70

   44 ROP: NE .

    $default  reduce using rule 44 (ROP)


State 71

   48 ROP: LT .

    $default  reduce using rule 48 (ROP)


State 72

   47 ROP: LE .

    $default  reduce using rule 47 (ROP)


State 73

   46 ROP: GT .

    $default  reduce using rule 46 (ROP)


State 74

   45 ROP: GE .

    $default  reduce using rule 45 (ROP)


State 75

   51 AOP: PLUS .

    $default  reduce using rule 51 (AOP)


State 76

   52 AOP: MINUS .

    $default  reduce using rule 52 (AOP)


State 77

   41 S_E: A_SM ROP . A_SM

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    IDS   go to state 46
    V     go to state 91
    A_SM  go to state 92
    TERM  go to state 57
    FAC   go to state 58
    CAL   go to state 59


State 78

   49 A_SM: A_SM AOP . TERM

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    IDS   go to state 46
    V     go to state 91
    TERM  go to state 93
    FAC   go to state 58
    CAL   go to state 59


State 79

   55 MOP: TIMES .

    $default  reduce using rule 55 (MOP)


State 80

   56 MOP: OVER .

    $default  reduce using rule 56 (MOP)


State 81

   53 TERM: TERM MOP . FAC

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    IDS  go to state 46
    V    go to state 91
    FAC  go to state 94
    CAL  go to state 59


State 82

   32 S_SM: IF LPAREN E . RPAREN SM
   33     | IF LPAREN E . RPAREN SM ELSE SM

    RPAREN  shift, and go to state 95


State 83

   34 I_SM: WHILE LPAREN E . RPAREN SM

    RPAREN  shift, and go to state 96


State 84

   36 RE_SM: RETURN E SEMI .

    $default  reduce using rule 36 (RE_SM)


State 85

   57 FAC: LPAREN E RPAREN .

    $default  reduce using rule 57 (FAC)


State 86

   65 ARG_L: E .

    $default  reduce using rule 65 (ARG_L)


State 87

   61 CAL: IDS LPAREN ARG . RPAREN

    RPAREN  shift, and go to state 97


State 88

   62 ARG: ARG_L .
   64 ARG_L: ARG_L . COMMA E

    COMMA  shift, and go to state 98

    $default  reduce using rule 62 (ARG)


State 89

   40 V: IDS LBRACE E . RBRACE

    RBRACE  shift, and go to state 99


State 90

   37 E: V ASSIGN E .

    $default  reduce using rule 37 (E)


State 91

   58 FAC: V .

    $default  reduce using rule 58 (FAC)


State 92

   41 S_E: A_SM ROP A_SM .
   49 A_SM: A_SM . AOP TERM

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 41 (S_E)

    AOP  go to state 78


State 93

   49 A_SM: A_SM AOP TERM .
   53 TERM: TERM . MOP FAC

    TIMES  shift, and go to state 79
    OVER   shift, and go to state 80

    $default  reduce using rule 49 (A_SM)

    MOP  go to state 81


State 94

   53 TERM: TERM MOP FAC .

    $default  reduce using rule 53 (TERM)


State 95

   32 S_SM: IF LPAREN E RPAREN . SM
   33     | IF LPAREN E RPAREN . SM ELSE SM

    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 30
    SEMI    shift, and go to state 45

    IDS    go to state 46
    C_SM   go to state 47
    SM     go to state 100
    E_SM   go to state 49
    S_SM   go to state 50
    I_SM   go to state 51
    RE_SM  go to state 52
    E      go to state 53
    V      go to state 54
    S_E    go to state 55
    A_SM   go to state 56
    TERM   go to state 57
    FAC    go to state 58
    CAL    go to state 59


State 96

   34 I_SM: WHILE LPAREN E RPAREN . SM

    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 30
    SEMI    shift, and go to state 45

    IDS    go to state 46
    C_SM   go to state 47
    SM     go to state 101
    E_SM   go to state 49
    S_SM   go to state 50
    I_SM   go to state 51
    RE_SM  go to state 52
    E      go to state 53
    V      go to state 54
    S_E    go to state 55
    A_SM   go to state 56
    TERM   go to state 57
    FAC    go to state 58
    CAL    go to state 59


State 97

   61 CAL: IDS LPAREN ARG RPAREN .

    $default  reduce using rule 61 (CAL)


State 98

   64 ARG_L: ARG_L COMMA . E

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    IDS   go to state 46
    E     go to state 102
    V     go to state 54
    S_E   go to state 55
    A_SM  go to state 56
    TERM  go to state 57
    FAC   go to state 58
    CAL   go to state 59


State 99

   40 V: IDS LBRACE E RBRACE .

    $default  reduce using rule 40 (V)


State 100

   32 S_SM: IF LPAREN E RPAREN SM .
   33     | IF LPAREN E RPAREN SM . ELSE SM

    ELSE  shift, and go to state 103

    $default  reduce using rule 32 (S_SM)


State 101

   34 I_SM: WHILE LPAREN E RPAREN SM .

    $default  reduce using rule 34 (I_SM)


State 102

   64 ARG_L: ARG_L COMMA E .

    $default  reduce using rule 64 (ARG_L)


State 103

   33 S_SM: IF LPAREN E RPAREN SM ELSE . SM

    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 30
    SEMI    shift, and go to state 45

    IDS    go to state 46
    C_SM   go to state 47
    SM     go to state 104
    E_SM   go to state 49
    S_SM   go to state 50
    I_SM   go to state 51
    RE_SM  go to state 52
    E      go to state 53
    V      go to state 54
    S_E    go to state 55
    A_SM   go to state 56
    TERM   go to state 57
    FAC    go to state 58
    CAL    go to state 59


State 104

   33 S_SM: IF LPAREN E RPAREN SM ELSE SM .

    $default  reduce using rule 33 (S_SM)
